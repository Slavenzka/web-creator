{"version":3,"sources":["components/Info/TextBlock/TextBlock.module.scss","components/Header/Header.module.scss","components/Info/Info.module.scss","containers/Slider/Slider.module.scss","containers/Form/Input/Input.module.scss","components/Footer/Footer.module.scss","components/Header/Header.js","components/Footer/Footer.js","containers/Slider/Slider.js","components/Info/TextBlock/TextBlock.js","components/Info/Info.js","containers/Form/Input/Input.js","containers/Form/Form.js","Pages/PageMain/PageMain.js","App.js","serviceWorker.js","index.js","containers/Form/Form.module.scss"],"names":["module","exports","Header","className","css","header","Container","Row","title","Component","Footer","wrapper","style","visibility","Slider","swiper","state","activeIndex","goNext","slideNext","goPrev","slidePrev","goTo","num","speed","slideTo","structureSlides","array","itemsPerSubarray","input","slice","result","length","push","splice","icon","width","height","viewBox","fill","xmlns","id","gradientUnits","x1","y1","x2","y2","gradientTransform","offset","stopColor","d","this","props","data","images","slidesPerView","params","spaceBetween","on","slideChangeTransitionStart","setState","slidesQty","Math","ceil","sliderContent","map","subarray","key","slide","item","index","image","src","alt","slider","ref","node","controls","classnames","button","buttonDisabled","onClick","pagination","Array","bullet","bulletActive","buttonNext","PureComponent","TextBlock","col","split","type","qty","dynamicProp","Col","wyziwig","dangerouslySetInnerHTML","__html","text","Info","content","components","metadata","block","Input","focused","handleFocusedInput","prevState","label","changed","value","required","inputElement","classNames","inputWrapper","inputWrapperFocus","onChange","onFocus","onBlur","dateWrapper","date","textareaWrapper","textareaWrapperFocus","textarea","element","htmlFor","Form","checkbox","inputChangedHandler","event","controlName","controlType","updatedFormState","target","checkboxChangedHandler","submitClickedHandler","evt","preventDefault","console","log","fields","forEach","field","name","field_groups","submit_button","formGroups","Object","keys","groupName","dynamicBootstrapProp","groupContent","filter","formElement","group","md","paddingLeft","paddingRight","marginTop","checkboxWrapper","checked","labelWyziwig","labelWyziwigActive","form","formWrapper","action","submit","PageMain","axios","get","then","response","itemContent","App","path","exact","component","Boolean","window","location","hostname","match","Page","basename","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d84f30f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"TextBlock_wrapper__j_o2W\",\"title\":\"TextBlock_title__28xuP\",\"wyziwig\":\"TextBlock_wyziwig__GWMiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__358ji\",\"title\":\"Header_title__1rRQ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Info_text__1mXAu\",\"block\":\"Info_block__2FyT_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Slider_wrapper__2kLrc\",\"title\":\"Slider_title__1FZAp\",\"slider\":\"Slider_slider__1BP19\",\"slide\":\"Slider_slide__2gOb8\",\"image\":\"Slider_image__19jlW\",\"controls\":\"Slider_controls__ei9MB\",\"pagination\":\"Slider_pagination__2yBD1\",\"bullet\":\"Slider_bullet__2h_bp\",\"bulletActive\":\"Slider_bulletActive__3Ndpl\",\"button\":\"Slider_button__1feZI\",\"icon\":\"Slider_icon__314tg\",\"buttonNext\":\"Slider_buttonNext__3xvbx\",\"buttonDisabled\":\"Slider_buttonDisabled__10hiD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"element\":\"Input_element__2N_6B\",\"label\":\"Input_label__2CDtA\",\"inputWrapper\":\"Input_inputWrapper__1cBh1\",\"input\":\"Input_input__2lwEQ\",\"inputWrapperFocus\":\"Input_inputWrapperFocus__11nIM\",\"textareaWrapper\":\"Input_textareaWrapper__2tPjj\",\"textareaWrapperFocus\":\"Input_textareaWrapperFocus__1ihWr\",\"textarea\":\"Input_textarea__16IXu\",\"date\":\"Input_date__3xZyM\",\"dateWrapper\":\"Input_dateWrapper__2wjT2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Footer_wrapper__67MD2\"};","import React, { Component } from 'react';\r\nimport css from './Header.module.scss'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nclass Header extends Component {\r\n  render () {\r\n    return (\r\n      <header className={css.header}>\r\n        <Container>\r\n          <Row>\r\n            <h1 className={css.title}>\r\n              Тестовое задание\r\n            </h1>\r\n          </Row>\r\n        </Container>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport css from './Footer.module.scss'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={css.wrapper}>\r\n      <Container>\r\n        <Row>\r\n          <p style={{ visibility: 'hidden' }}>Some footer content</p>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","// common\r\nimport React, { PureComponent } from 'react'\r\nimport PropTypes from 'prop-types'\r\n// packages\r\nimport 'react-id-swiper/src/styles/css/swiper.css'\r\nimport Swiper from 'react-id-swiper'\r\nimport classnames from 'classnames'\r\n// styles\r\nimport css from 'containers/Slider/Slider.module.scss'\r\n\r\nclass Slider extends PureComponent {\r\n  swiper = null\r\n\r\n  state = {\r\n    activeIndex: 0\r\n  }\r\n\r\n  goNext = (speed = 500) => {\r\n    if (this.swiper) {\r\n      this.swiper.slideNext()\r\n    }\r\n  }\r\n\r\n  goPrev = (speed = 500) => {\r\n    if (this.swiper) this.swiper.slidePrev()\r\n  }\r\n\r\n  goTo = (num, speed = 1000) => {\r\n    this.swiper.slideTo(num, speed)\r\n  }\r\n\r\n  structureSlides = (array, itemsPerSubarray) => {\r\n    let input = array.slice()\r\n    let result = []\r\n\r\n    while (input.length > 0) {\r\n      result.push(input.splice(0, itemsPerSubarray))\r\n    }\r\n\r\n    return result\r\n  }\r\n\r\n  icon = () => (\r\n    <svg className={css.icon} width='32' height='32' viewBox='0 0 32 32' fill='none' xmlns='http://www.w3.org/2000/svg'>\r\n      <linearGradient id='linear-gradient' gradientUnits='userSpaceOnUse' x1='0' y1='0' x2='100%' y2='100%' gradientTransform='matrix(-1, 0, 0, 1, 0, 0)'>\r\n        <stop offset='-1.93%' stopColor='#93E08C' />\r\n        <stop offset='97.03%' stopColor='#78CEBF' />\r\n      </linearGradient>\r\n      <path d='M15.9992 0C7.17884 0.00159992 0.00159992 7.17884 0 16.0008C0 24.8228 7.17724 32 16.0008 32C24.8228 31.9984 32 24.8212 32 16.0008C32 7.17884 24.8228 0.00159992 15.9992 0ZM16.0008 28.8002C8.94195 28.8002 3.19984 23.058 3.19984 16.0008C3.20144 8.94355 8.94355 3.20144 15.9992 3.19984C23.058 3.20144 28.8002 8.94355 28.8002 16.0008C28.8002 23.0564 23.058 28.7986 16.0008 28.8002Z'/>\r\n      <path d='M16.02 9.59302L9.6123 16.0007L16.02 22.4068V17.6006H22.4101V14.4008H16.02V9.59302Z' />\r\n    </svg>\r\n  )\r\n\r\n  render () {\r\n    const { activeIndex } = this.state\r\n    const { title, images, slidesPerView } = this.props.data\r\n\r\n    const params = {\r\n      slidesPerView: 1,\r\n      spaceBetween: 24,\r\n      speed: 1500,\r\n      on: {\r\n        slideChangeTransitionStart: () => {\r\n          if (this.swiper) {\r\n            const {activeIndex} = this.swiper\r\n            this.setState({ activeIndex })\r\n          }\r\n        },\r\n      }\r\n    }\r\n\r\n    const slidesQty = Math.ceil(images.length / slidesPerView)\r\n\r\n    let structuredImages = this.structureSlides(images, slidesPerView)\r\n\r\n    const sliderContent = structuredImages.map((subarray, key) => {\r\n      const slide = subarray.map((item, index) => {\r\n        return <img className={css.image} src={item} key={index} alt='Фото-слайд' />\r\n      })\r\n\r\n      return (\r\n        <div className={css.slide} key={key}>\r\n          {slide}\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <section className={css.wrapper}>\r\n        <h2 className={css.title}>\r\n          {title}\r\n        </h2>\r\n        <div className={css.slider}>\r\n          <Swiper {...params} ref={node => { if (node) this.swiper = node.swiper }}>\r\n            {sliderContent}\r\n          </Swiper>\r\n        </div>\r\n        <div className={css.controls}>\r\n          <button\r\n            className={classnames(css.button, { [css.buttonDisabled]: activeIndex === 0 })}\r\n            onClick={this.goPrev}\r\n          >\r\n            Предыдущий слайд\r\n            {this.icon()}\r\n          </button>\r\n          <div className={css.pagination}>\r\n            {new Array(slidesQty).fill(null).map((item, key) => {\r\n              return (\r\n                <div\r\n                  className={classnames(css.bullet, { [css.bulletActive]: key === activeIndex })}\r\n                  onClick={() => this.goTo(key)}\r\n                  key={key}\r\n                >\r\n                  slide {key}\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n          <button\r\n            className={classnames(css.button, css.buttonNext, { [css.buttonDisabled]: activeIndex === slidesQty - 1 })}\r\n            onClick={this.goNext}\r\n          >\r\n            Следующий слайд\r\n            {this.icon()}\r\n          </button>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nSlider.propTypes = {\r\n  data: PropTypes.object\r\n}\r\n\r\nexport default Slider\r\n","// common\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// packages\r\nimport { Col } from 'react-bootstrap'\r\n// styles\r\nimport css from './TextBlock.module.scss'\r\n\r\nconst TextBlock = ({ col, data, className }) => {\r\n  const [type, qty] = col.split('-')\r\n  const dynamicProp = { [type]: qty }\r\n\r\n  return (\r\n    <Col {...dynamicProp} className={className}>\r\n      <div className={css.wrapper}>\r\n        <h3 className={css.title}>\r\n          {data.title}\r\n        </h3>\r\n        <div className={css.wyziwig} dangerouslySetInnerHTML={{ __html: data.text }}  />\r\n      </div>\r\n    </Col>\r\n  )\r\n}\r\n\r\nTextBlock.propTypes = {\r\n  className: PropTypes.string,\r\n  col: PropTypes.string,\r\n  data: PropTypes.object\r\n}\r\n\r\nexport default TextBlock\r\n","// common\r\nimport React from 'react';\r\n// packages\r\nimport { Row } from 'react-bootstrap'\r\n// styles\r\nimport css from './Info.module.scss'\r\nimport TextBlock from 'components/Info/TextBlock/TextBlock'\r\n\r\nconst Info = props => {\r\n  const content = props.data.components.map((item, key) => {\r\n    return <TextBlock col={item.col} data={item.metadata} key={key} className={css.block} />\r\n  })\r\n\r\n  return (\r\n    <section className={css.text}>\r\n      <Row>\r\n        <h2 className='visuallyHidden'>\r\n          О компании\r\n        </h2>\r\n        {content}\r\n      </Row>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default Info;\r\n","// common\r\nimport React, { PureComponent } from 'react'\r\n// packages\r\nimport classNames from 'classnames'\r\n// styles\r\nimport css from './Input.module.scss'\r\n\r\nclass Input extends PureComponent {\r\n  state = {\r\n    focused: false\r\n  }\r\n\r\n  handleFocusedInput = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        focused: !prevState.focused\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  render () {\r\n    const {\r\n      type,\r\n      label,\r\n      changed,\r\n      value,\r\n      id,\r\n      required\r\n    } = this.props\r\n\r\n    let inputElement = null\r\n\r\n    switch (type) {\r\n      case 'text':\r\n      case 'phone':\r\n      case 'email':\r\n        inputElement = (\r\n          <div className={classNames(css.inputWrapper, { [css.inputWrapperFocus]: this.state.focused })}>\r\n            <input\r\n              className={css.input}\r\n              value={value}\r\n              onChange={changed}\r\n              id={id}\r\n              required={required}\r\n              onFocus={this.handleFocusedInput}\r\n              onBlur={this.handleFocusedInput}\r\n            />\r\n          </div>\r\n        )\r\n        break\r\n      case 'date':\r\n        inputElement = (\r\n          <div className={classNames(css.dateWrapper, css.inputWrapper, { [css.inputWrapperFocus]: this.state.focused })}>\r\n            <input\r\n              className={classNames(css.input, css.date)}\r\n              value={value}\r\n              onChange={changed}\r\n              id={id}\r\n              required={required}\r\n              onFocus={this.handleFocusedInput}\r\n              onBlur={this.handleFocusedInput}\r\n            />\r\n          </div>\r\n        )\r\n        break\r\n      case 'textarea':\r\n        inputElement = (\r\n          <div className={classNames(css.textareaWrapper, { [css.textareaWrapperFocus]: this.state.focused })}>\r\n            <textarea\r\n              className={classNames(css.input, css.textarea)}\r\n              value={value}\r\n              onChange={changed}\r\n              id={id}\r\n              required={required}\r\n              onFocus={this.handleFocusedInput}\r\n              onBlur={this.handleFocusedInput}\r\n            />\r\n          </div>\r\n        )\r\n        break\r\n      default:\r\n        inputElement = <input\r\n          className={css.input}\r\n          value={value}\r\n          onChange={changed}\r\n          id={id}\r\n          required={required}\r\n        />\r\n    }\r\n\r\n    return (\r\n      <div className={css.element}>\r\n        <label className={css.label} htmlFor={id}>{label}</label>\r\n        {inputElement}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Input\r\n","// common\r\nimport React, { PureComponent } from 'react'\r\n// packages\r\nimport { Col, Row } from 'react-bootstrap'\r\nimport classNames from 'classnames'\r\n// styles\r\nimport css from 'containers/Form/Form.module.scss'\r\nimport Input from 'containers/Form/Input/Input'\r\n\r\nclass Form extends PureComponent {\r\n  state = {\r\n    checkbox: true\r\n  }\r\n\r\n\r\n  componentDidMount () {\r\n    this.props.data.fields.forEach(field => {\r\n      this.setState({\r\n        [field.name + '-' + field.type]: ''\r\n      })\r\n    })\r\n  }\r\n\r\n  inputChangedHandler = (event, controlName, controlType) => {\r\n    let updatedFormState = {\r\n      ...this.state,\r\n      [controlName + '-' + controlType]: event.target.value\r\n    }\r\n\r\n    this.setState({\r\n      ...updatedFormState\r\n    })\r\n  }\r\n\r\n  checkboxChangedHandler = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        ...prevState,\r\n        checkbox: !prevState.checkbox\r\n      }\r\n    })\r\n  }\r\n\r\n  submitClickedHandler = (evt) => {\r\n    evt.preventDefault()\r\n    console.log('Submitted!')\r\n  }\r\n\r\n  render () {\r\n    const { title, fields, field_groups, submit_button } = this.props.data\r\n\r\n    const formGroups = Object.keys(field_groups).map((groupName, key) => {\r\n      const [ , type, qty] = field_groups[groupName].split('-')\r\n      const dynamicBootstrapProp = { [type]: qty }\r\n\r\n      const groupContent = fields\r\n        .filter(formElement => {\r\n          return formElement.group === groupName\r\n        })\r\n        .map((formElement, index) => {\r\n          return (\r\n            <Col\r\n              md={groupName === 'main' ? 6 : 12}\r\n              style={{\r\n                paddingLeft: index % 2 !== 0 && '0',\r\n                paddingRight: groupName === 'main' && index % 2 === 0 && '0',\r\n                marginTop: index > 1 && '24px'\r\n              }}\r\n              key={index}\r\n            >\r\n              <Input\r\n                name={formElement.name}\r\n                type={formElement.type}\r\n                label={formElement.label}\r\n                changed={evt => this.inputChangedHandler(evt, formElement.name, formElement.type)}\r\n                value={this.state[formElement.name + '-' + formElement.type] || ''}\r\n                key={index}\r\n                id={formElement.name + '-' + formElement.type + '-' + key + '-' + index}\r\n                required={formElement.required}\r\n              />\r\n            </Col>\r\n          )\r\n        })\r\n\r\n      return (\r\n        <Col\r\n          {...dynamicBootstrapProp}\r\n          key={key}\r\n          style={{\r\n            paddingLeft: key % 2 !== 0 && '0',\r\n            paddingRight: key % 2 === 0 && '0' }}\r\n        >\r\n          <Row>\r\n            {groupContent}\r\n          </Row>\r\n        </Col>\r\n      )\r\n    })\r\n\r\n    const checkbox = fields.filter(formElement => {\r\n      return formElement.type === 'checkbox'\r\n    }).map((item, key) => {\r\n      return (\r\n        <div className={css.checkboxWrapper} key={key}>\r\n          <input\r\n            className={classNames(css.checkbox, 'visuallyHidden')}\r\n            type='checkbox'\r\n            id={item.name + '-' + key}\r\n            checked={this.state.checkbox}\r\n            onChange={this.checkboxChangedHandler}\r\n          />\r\n          <label\r\n            className={classNames(css.labelWyziwig, { [css.labelWyziwigActive]: this.state.checkbox })}\r\n            htmlFor={item.name + '-' + key}\r\n            dangerouslySetInnerHTML={{ __html: item.label }}\r\n          />\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <section className={css.form}>\r\n        {title &&\r\n          <h3 className={css.title}>\r\n            {title}\r\n          </h3>\r\n        }\r\n        <div className={css.formWrapper}>\r\n          <form action=\"#\">\r\n            <Row>\r\n              {formGroups}\r\n              <Col md={12}>\r\n                {checkbox}\r\n              <button\r\n                className={css.submit}\r\n                onClick={evt => this.submitClickedHandler(evt)}\r\n                type='submit'\r\n              >\r\n                {submit_button.text}\r\n              </button>\r\n              </Col>\r\n            </Row>\r\n          </form>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form\r\n","// common\r\nimport React, { Component } from 'react'\r\n// components\r\nimport Slider from 'containers/Slider/Slider'\r\nimport Info from 'components/Info/Info'\r\nimport Form from 'containers/Form/Form'\r\n// packages\r\nimport axios from 'axios'\r\nimport { Container, Row } from 'react-bootstrap'\r\n\r\nclass PageMain extends Component {\r\n  state = {\r\n    data: null\r\n  }\r\n\r\n  componentDidMount () {\r\n    axios.get('server/data.json')\r\n      .then(response => this.setState({\r\n        data: response.data\r\n      }))\r\n  }\r\n\r\n  render () {\r\n    const { data } = this.state\r\n\r\n    if (!data) return null;\r\n\r\n    const components = data.components.map((item, key) => {\r\n      let itemContent = null;\r\n      switch (item.type) {\r\n        case 'GalleryComponent':\r\n          itemContent = <Slider data={item.metadata} />\r\n          break\r\n        default:\r\n          itemContent = <Info data={item.metadata} />\r\n          break;\r\n      }\r\n\r\n      return (\r\n        <Row key={key}>\r\n          {itemContent}\r\n        </Row>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <main>\r\n        <Container>\r\n          {components}\r\n          <Row>\r\n            <Form data={data.form} />\r\n          </Row>\r\n        </Container>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PageMain\r\n","// common\nimport React from 'react';\n// components\nimport Header from 'components/Header/Header'\nimport Footer from 'components/Footer/Footer'\nimport PageMain from 'Pages/PageMain/PageMain'\n// packages\nimport { Switch, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route path='/' exact component={PageMain} />\n      </Switch>\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'core-js/es';\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'normalize.css'\nimport 'styles/common.scss';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nconst Page = (\n  <HashRouter basename='/'>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(Page, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__loURv\",\"title\":\"Form_title__1fb9K\",\"formWrapper\":\"Form_formWrapper__12j2h\",\"checkboxWrapper\":\"Form_checkboxWrapper__3xkwS\",\"labelWyziwig\":\"Form_labelWyziwig__AWRPI\",\"labelWyziwigActive\":\"Form_labelWyziwigActive__2n_p2\",\"submit\":\"Form_submit__FWUXy\"};"],"sourceRoot":""}